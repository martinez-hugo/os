#nolint:valid-pipeline-fetch-digest
package:
  name: ingress-nginx-controller
  version: 1.8.0
  epoch: 5
  description: "Ingress-NGINX Controller for Kubernetes"
  copyright:
    - license: Apache-2.0
  dependencies:
    runtime:
      - curl
      - curl-dev
      - openssh-client
      - ca-certificates-bundle
      - ca-certificates
      - openssl
      - openssl-dev
      - opentracing-cpp
      - jaeger-cpp
      - msgpack
      - datadog-cpp
      - yaml-cpp
      - zipkin-cpp
      - ssdeep
      - luajit
      - luajit-dev
      - lua-cjson
      - lua-resty-balancer
      - lua-resty-cache
      - lua-resty-cookie
      - lua-resty-core
      - lua-resty-dns
      - lua-resty-global-throttle
      - lua-resty-http
      - lua-resty-ipmatcher
      - lua-resty-lock
      - lua-resty-memcached
      - lua-resty-redis
      - lua-resty-string
      - lua-resty-upload
      - ca-certificates-bundle
      - brotli-dev
      - gd-dev
      - geoip-dev
      - libmaxminddb-dev
      - libxml2-dev
      - libxslt-dev

environment:
  contents:
    packages:
      - wolfi-base
      - busybox
      - go
      - bash
      - curl
      - curl-dev
      - git
      - openssh-client
      - libcap-utils
      - libcap
      - scanelf
      - ca-certificates-bundle
      - brotli-dev
      - gd-dev
      - geoip-dev
      - libmaxminddb-dev
      - libxml2-dev
      - libxslt-dev
      - pkgconf
      - zeromq-dev
      - gcc
      - clang-15
      - make
      - automake
      - openssl-dev
      - pcre-dev
      - zlib-dev
      - linux-headers
      - perl-dev
      - libedit-dev
      - mercurial
      - findutils
      - ca-certificates
      - patch
      - libaio-dev
      - openssl
      - cmake
      - util-linux
      - lmdb-tools
      - wget
      - libprotobuf
      - flex
      - bison
      - doxygen
      - yajl-dev
      - lmdb-dev
      - libtool
      - autoconf
      - libxml2
      - python3
      - libsrt
      - opentracing-cpp
      - jaeger-cpp
      - msgpack
      - datadog-cpp
      - yaml-cpp
      - zipkin-cpp
      - ssdeep
      - luajit
      - luajit-dev
      - lua-cjson
      - lua-resty-balancer
      - lua-resty-cache
      - lua-resty-cookie
      - lua-resty-core
      - lua-resty-dns
      - lua-resty-global-throttle
      - lua-resty-http
      - lua-resty-ipmatcher
      - lua-resty-lock
      - lua-resty-memcached
      - lua-resty-redis
      - lua-resty-string
      - lua-resty-upload

vars:
  NGINX_VERSION: "1.21.6"
  NGINX_SHA: "66dc7081488811e9f925719e34d1b4504c2801c81dee2920e5452a86b11405ae"
  NDK_VERSION: "0.3.1"
  NDK_VERSION_SHA: "0e971105e210d272a497567fa2e2c256f4e39b845a5ba80d373e26ba1abfbd85"
  SETMISC_VERSION: "0.33"
  SETMISC_VERSION_SHA: "cd5e2cc834bcfa30149e7511f2b5a2183baf0b70dc091af717a89a64e44a2985"
  MORE_HEADERS_VERSION: "0.33"
  MORE_HEADERS_VERSION_SHA: "a3dcbab117a9c103bc1ea5200fc00a7b7d2af97ff7fd525f16f8ac2632e30fbf"
  NGINX_DIGEST_AUTH: "1.0.0"
  NGINX_DIGEST_AUTH_SHA: "f09851e6309560a8ff3e901548405066c83f1f6ff88aa7171e0763bd9514762b"
  NGINX_SUBSTITUTIONS: "b8a71eacc7f986ba091282ab8b1bbbc6ae1807e0"
  NGINX_SUBSTITUTIONS_SHA: "a98b48947359166326d58700ccdc27256d2648218072da138ab6b47de47fbd8f"
  NGINX_OPENTRACING_VERSION: "0.19.0"
  NGINX_OPENTRACING_VERSION_SHA: "6f97776ebdf019b105a755c7736b70bdbd7e575c7f0d39db5fe127873c7abf17"
  MODSECURITY_NGINX_VERSION: "1.0.3"
  MODSECURITY_NGINX_VERSION_SHA: "32a42256616cc674dca24c8654397390adff15b888b77eb74e0687f023c8751b"
  MODSECURITY_LIB_VERSION: "e9a7ba4a60be48f761e0328c6dfcc668d70e35a0"
  OWASP_MODSECURITY_CRS_VERSION: "v3.3.2"
  LUA_RESTY_CORE: "0.1.23"
  LUA_RESTY_CORE_SHA: "efd6b51520429e64b1bcc10f477d370ebed1631c190f7e4dc270d959a743ad7d"
  LUA_NGX_VERSION: "0.10.21"
  LUA_NGX_VERSION_SHA: "9db756000578efaecb43bea4fc6cf631aaa80988d86ffe5d3afeb9927895ffad"
  LUA_STREAM_NGX_VERSION: "0.0.11"
  LUA_STREAM_NGX_VERSION_SHA: "c7924f28cb014a99636e747ea907724dd55f60e180cb92cde6e8ed48d2278f27"
  LUA_UPSTREAM_VERSION: "8aa93ead98ba2060d4efd594ae33a35d153589bf"
  LUA_UPSTREAM_VERSION_SHA: "a92c9ee6682567605ece55d4eed5d1d54446ba6fba748cff0a2482aea5713d5f"
  LUA_CJSON_VERSION: "4b350c531de3d71008c77ae94e59275b8371b4dc"
  LUA_CJSON_VERSION_SHA: "8d602af2669fb386931760916a39f6c9034f2363c4965f215042c086b8215238"
  GEOIP2_VERSION: "a26c6beed77e81553686852dceb6c7fdacc5970d"
  GEOIP2_VERSION_SHA: "4c1933434572226942c65b2f2b26c8a536ab76aa771a3c7f6c2629faa764976b"
  NGINX_AJP_VERSION: "fcbb2ccca4901d317ecd7a9dabb3fec9378ff40f"
  NGINX_AJP_VERSION_SHA: "778fcca851bd69dabfb382dc827d2ee07662f7eca36b5e66e67d5512bad75ef8"

pipeline:
  - uses: git-checkout
    with:
      repository: https://github.com/kubernetes/ingress-nginx
      tag: controller-v${{package.version}}
      expected-commit: 3476232f5c38383dd157ddaff3b4c7cebd57284e

  - name: Build ingress-nginx controller from source
    runs: |
      export PKG="k8s.io/ingress-nginx"
      export COMMIT_SHA=$(git rev-parse --short HEAD)
      export REPO_INFO=$(git config --get remote.origin.url)$

      mkdir -p ${{targets.destdir}}

      export CGO_ENABLED=0

      go build -x -v \
      -trimpath -ldflags="-buildid= -w -s \
      -X ${PKG}/version.RELEASE=controller-v${{package.version}} \
      -X ${PKG}/version.COMMIT=${COMMIT_SHA} \
      -X ${PKG}/version.REPO=${REPO_INFO}" \
      -o "${{targets.destdir}}/dbg" ${PKG}/cmd/dbg

      go build -x -v \
      -trimpath -ldflags="-buildid= -w -s \
      -X ${PKG}/version.RELEASE=controller-v${{package.version}} \
      -X ${PKG}/version.COMMIT=${COMMIT_SHA} \
      -X ${PKG}/version.REPO=${REPO_INFO}" \
      -o "${{targets.destdir}}/waitshutdown" ${PKG}/cmd/waitshutdown

      go build -x -v \
      -trimpath -ldflags="-buildid= -w -s \
      -X ${PKG}/version.RELEASE=controller-v${{package.version}} \
      -X ${PKG}/version.COMMIT=${COMMIT_SHA} \
      -X ${PKG}/version.REPO=${REPO_INFO}" \
      -o "${{targets.destdir}}/nginx-ingress-controller" ${PKG}/cmd/nginx

      setcap cap_net_bind_service=+ep ${{targets.destdir}}/nginx-ingress-controller \
      && setcap -v cap_net_bind_service=+ep ${{targets.destdir}}/nginx-ingress-controller

      getcap ${{targets.destdir}}/nginx-ingress-controller

  - uses: fetch
    with:
      uri: https://nginx.org/download/nginx-${{vars.NGINX_VERSION}}.tar.gz
      expected-sha256: ${{vars.NGINX_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/simpl/ngx_devel_kit/archive/v${{vars.NDK_VERSION}}.tar.gz
      expected-sha256: ${{vars.NDK_VERSION_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/openresty/set-misc-nginx-module/archive/v${{vars.SETMISC_VERSION}}.tar.gz
      expected-sha256: ${{vars.SETMISC_VERSION_SHA}}
      strip-components: 0

  - runs: |
      rm -rf v0.33.tar.gz

  - uses: fetch
    with:
      uri: https://github.com/openresty/headers-more-nginx-module/archive/v${{vars.MORE_HEADERS_VERSION}}.tar.gz
      expected-sha256: ${{vars.MORE_HEADERS_VERSION_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/yaoweibin/ngx_http_substitutions_filter_module/archive/${{vars.NGINX_SUBSTITUTIONS}}.tar.gz
      expected-sha256: ${{vars.NGINX_SUBSTITUTIONS_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/openresty/lua-nginx-module/archive/v${{vars.LUA_NGX_VERSION}}.tar.gz
      expected-sha256: ${{vars.LUA_NGX_VERSION_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/openresty/stream-lua-nginx-module/archive/v${{vars.LUA_STREAM_NGX_VERSION}}.tar.gz
      expected-sha256: ${{vars.LUA_STREAM_NGX_VERSION_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/openresty/lua-upstream-nginx-module/archive/${{vars.LUA_UPSTREAM_VERSION}}.tar.gz
      expected-sha256: ${{vars.LUA_UPSTREAM_VERSION_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/yaoweibin/nginx_ajp_module/archive/${{vars.NGINX_AJP_VERSION}}.tar.gz
      expected-sha256: ${{vars.NGINX_AJP_VERSION_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/atomx/nginx-http-auth-digest/archive/v${{vars.NGINX_DIGEST_AUTH}}.tar.gz
      expected-sha256: ${{vars.NGINX_DIGEST_AUTH_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/opentracing-contrib/nginx-opentracing/archive/v${{vars.NGINX_OPENTRACING_VERSION}}.tar.gz
      expected-sha256: ${{vars.NGINX_OPENTRACING_VERSION_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/SpiderLabs/ModSecurity-nginx/archive/v${{vars.MODSECURITY_NGINX_VERSION}}.tar.gz
      expected-sha256: ${{vars.MODSECURITY_NGINX_VERSION_SHA}}
      strip-components: 0

  - uses: fetch
    with:
      uri: https://github.com/leev/ngx_http_geoip2_module/archive/${{vars.GEOIP2_VERSION}}.tar.gz
      expected-sha256: ${{vars.GEOIP2_VERSION_SHA}}
      strip-components: 0

  - name: Build NGINX
    runs: |
      export BUILD_PATH="${PWD}"
      echo "BUILD_PATH $BUILD_PATH"
      echo "Arch: $(uname -m)"
      # improve compilation times
      CORES=$(($(grep -c ^processor /proc/cpuinfo) - 1))

      export LUAJIT_LIB="$(pkgconf --variable=libdir luajit)"
      export LUAJIT_INC="$(pkgconf --variable=includedir luajit)"
      export LUA_LIB_DIR="$LUAJIT_LIB/lua"
      ln -s "$LUAJIT_INC" /usr/include/lua
      export LUA_INCLUDE_DIR=/usr/include/luajit-2.1
      ln -s $LUA_INCLUDE_DIR /usr/include/lua5.1
      ARCH=$(uname -m)

      ls -lah ${BUILD_PATH}/lua-nginx-module-${{vars.LUA_NGX_VERSION}}
      echo /usr/local/lib >> /etc/ld.so.conf
      ldconfig
      cat /etc/ld.so.conf

      mkdir -p ${{targets.destdir}}/etc/nginx/

      # Geo ip data from nginx image
      cp -ar images/nginx/rootfs/etc/nginx/. ${{targets.destdir}}/etc/nginx/

      # Lua code copied into the target
      cp -ar rootfs/etc/nginx/. ${{targets.destdir}}/etc/nginx/

      # Get Brotli source and deps
      echo "::::::::::::::::::::::::::::::::::::::"
      echo ":::: ngx_brotl ::::"
      echo "::::::::::::::::::::::::::::::::::::::"
      cd "$BUILD_PATH"
      git clone --depth=1 https://github.com/google/ngx_brotli.git
      cd ngx_brotli
      git submodule init
      git submodule update

      cd "$BUILD_PATH"
      git clone -n https://github.com/SpiderLabs/ModSecurity
      cd ModSecurity/
      git branch
      git checkout ${{vars.MODSECURITY_LIB_VERSION}}
      git submodule init
      git submodule update

      sh build.sh

      # https://github.com/SpiderLabs/ModSecurity/issues/1909#issuecomment-465926762
      sed -i '115i LUA_CFLAGS="${LUA_CFLAGS} -DWITH_LUA_JIT_2_1"' build/lua.m4
      sed -i '117i AC_SUBST(LUA_CFLAGS)' build/lua.m4

      ./configure \
      --disable-doxygen-doc \
      --disable-doxygen-html \
      --disable-examples

      make -j$(nproc)
      make install

      mkdir -p ${{targets.destdir}}/etc/nginx/modsecurity
      cp modsecurity.conf-recommended ${{targets.destdir}}/etc/nginx/modsecurity/modsecurity.conf
      cp unicode.mapping ${{targets.destdir}}/etc/nginx/modsecurity/unicode.mapping

      # Replace serial logging with concurrent
      sed -i 's|SecAuditLogType Serial|SecAuditLogType Concurrent|g' ${{targets.destdir}}/etc/nginx/modsecurity/modsecurity.conf

      # Concurrent logging implies the log is stored in several files
      echo "SecAuditLogStorageDir /var/log/audit/" >> ${{targets.destdir}}/etc/nginx/modsecurity/modsecurity.conf

      # Download owasp modsecurity crs
      cd ${{targets.destdir}}/etc/nginx/

      git clone -b ${{vars.OWASP_MODSECURITY_CRS_VERSION}} https://github.com/coreruleset/coreruleset owasp-modsecurity-crs
      cd owasp-modsecurity-crs

      mv crs-setup.conf.example crs-setup.conf
      mv rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf.example rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf
      mv rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf.example rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf

      # OWASP CRS v3 rules
      echo '
      Include /etc/nginx/owasp-modsecurity-crs/crs-setup.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-900-EXCLUSION-RULES-BEFORE-CRS.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-901-INITIALIZATION.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-903.9001-DRUPAL-EXCLUSION-RULES.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-903.9002-WORDPRESS-EXCLUSION-RULES.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-905-COMMON-EXCEPTIONS.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-910-IP-REPUTATION.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-911-METHOD-ENFORCEMENT.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-912-DOS-PROTECTION.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-913-SCANNER-DETECTION.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-920-PROTOCOL-ENFORCEMENT.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-921-PROTOCOL-ATTACK.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-930-APPLICATION-ATTACK-LFI.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-931-APPLICATION-ATTACK-RFI.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-932-APPLICATION-ATTACK-RCE.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-933-APPLICATION-ATTACK-PHP.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-934-APPLICATION-ATTACK-NODEJS.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-941-APPLICATION-ATTACK-XSS.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-942-APPLICATION-ATTACK-SQLI.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-943-APPLICATION-ATTACK-SESSION-FIXATION.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-944-APPLICATION-ATTACK-JAVA.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/REQUEST-949-BLOCKING-EVALUATION.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/RESPONSE-950-DATA-LEAKAGES.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/RESPONSE-951-DATA-LEAKAGES-SQL.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/RESPONSE-952-DATA-LEAKAGES-JAVA.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/RESPONSE-953-DATA-LEAKAGES-PHP.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/RESPONSE-954-DATA-LEAKAGES-IIS.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/RESPONSE-959-BLOCKING-EVALUATION.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/RESPONSE-980-CORRELATION.conf
      Include /etc/nginx/owasp-modsecurity-crs/rules/RESPONSE-999-EXCLUSION-RULES-AFTER-CRS.conf
      ' > ${{targets.destdir}}/etc/nginx/owasp-modsecurity-crs/nginx-modsecurity.conf


      echo "::::::::::::::::::::::::::::::::::::::"
      echo ":::: nginx-${{vars.NGINX_VERSION}} ::::"
      echo "::::::::::::::::::::::::::::::::::::::"

      cd "$BUILD_PATH/nginx-${{vars.NGINX_VERSION}}"
      # apply nginx patches
      for PATCH in `ls $BUILD_PATH/patches`;do
        echo "Patch: $PATCH"
        if [[ "$PATCH" == *.txt ]]; then
          patch -p0 < $BUILD_PATH/patches/$PATCH
        else
          patch -p1 < $BUILD_PATH/patches/$PATCH
        fi
      done

      WITH_FLAGS="--with-debug \
      --with-compat \
      --with-pcre-jit \
      --with-http_ssl_module \
      --with-http_stub_status_module \
      --with-http_realip_module \
      --with-http_auth_request_module \
      --with-http_addition_module \
      --with-http_geoip_module \
      --with-http_gzip_static_module \
      --with-http_sub_module \
      --with-http_v2_module \
      --with-stream \
      --with-stream_ssl_module \
      --with-stream_realip_module \
      --with-stream_ssl_preread_module \
      --with-threads \
      --with-http_secure_link_module \
      --with-http_gunzip_module"

      WITH_MODULES=" \
      --add-module=${BUILD_PATH}/ngx_devel_kit-${{vars.NDK_VERSION}} \
      --add-module=${BUILD_PATH}/set-misc-nginx-module-${{vars.SETMISC_VERSION}} \
      --add-module=${BUILD_PATH}/headers-more-nginx-module-${{vars.MORE_HEADERS_VERSION}} \
      --add-module=${BUILD_PATH}/ngx_http_substitutions_filter_module-${{vars.NGINX_SUBSTITUTIONS}} \
      --add-module=${BUILD_PATH}/lua-nginx-module-${{vars.LUA_NGX_VERSION}} \
      --add-module=${BUILD_PATH}/stream-lua-nginx-module-${{vars.LUA_STREAM_NGX_VERSION}} \
      --add-module=${BUILD_PATH}/lua-upstream-nginx-module-${{vars.LUA_UPSTREAM_VERSION}}  \
      --add-module=${BUILD_PATH}/nginx_ajp_module-${{vars.NGINX_AJP_VERSION}} \
      --add-dynamic-module=${BUILD_PATH}/nginx-http-auth-digest-${{vars.NGINX_DIGEST_AUTH}} \
      --add-dynamic-module=${BUILD_PATH}/nginx-opentracing-${{vars.NGINX_OPENTRACING_VERSION}}/opentracing \
      --add-dynamic-module=${BUILD_PATH}/ModSecurity-nginx-${{vars.MODSECURITY_NGINX_VERSION}}  \
      --add-dynamic-module=${BUILD_PATH}/ngx_http_geoip2_module-${{vars.GEOIP2_VERSION}}  \
      --add-dynamic-module=${BUILD_PATH}/ngx_brotli"

      # "Combining -flto with -g is currently experimental and expected to produce unexpected results."
      # https://gcc.gnu.org/onlinedocs/gcc/Optimize-Options.html
      CC_OPT="-g -O2 -fPIE -fstack-protector-strong \
      -Wformat \
      -Werror=format-security \
      -Wno-deprecated-declarations \
      -fno-strict-aliasing \
      -D_FORTIFY_SOURCE=2 \
      --param=ssp-buffer-size=4 \
      -DTCP_FASTOPEN=23 \
      -fPIC \
      -Wno-cast-function-type"

      LD_OPT="-fPIE -fPIC -pie -Wl,-z,relro -Wl,-z,now"

      if [[ ${ARCH} != "aarch64" ]]; then
        WITH_FLAGS="${WITH_FLAGS} --with-file-aio"
      fi

      if [[ ${ARCH} == "x86_64" ]]; then
        CC_OPT="${CC_OPT} -m64 -mtune=generic"
      fi

      echo "::::::::::::::::::::::::::::::::::::::::::::::::::::"
      echo ":::: Configuring nginx-${{vars.NGINX_VERSION }} ::::"
      echo "::::::::::::::::::::::::::::::::::::::::::::::::::"

      ./configure \
      --prefix=/usr/local/nginx \
      --conf-path=/etc/nginx/nginx.conf \
      --modules-path=/etc/nginx/modules \
      --http-log-path=/var/log/nginx/access.log \
      --error-log-path=/var/log/nginx/error.log \
      --lock-path=/var/lock/nginx.lock \
      --pid-path=/run/nginx.pid \
      --http-client-body-temp-path=/var/lib/nginx/body \
      --http-fastcgi-temp-path=/var/lib/nginx/fastcgi \
      --http-proxy-temp-path=/var/lib/nginx/proxy \
      --http-scgi-temp-path=/var/lib/nginx/scgi \
      --http-uwsgi-temp-path=/var/lib/nginx/uwsgi \
      ${WITH_FLAGS} \
      --without-mail_pop3_module \
      --without-mail_smtp_module \
      --without-mail_imap_module \
      --without-http_uwsgi_module \
      --without-http_scgi_module \
      --with-cc-opt="${CC_OPT}" \
      --with-ld-opt="${LD_OPT}" \
      --user=www-data \
      --group=www-data \
      ${WITH_MODULES}

      echo "::::::::::::::::::::::::::::::::::::::::::::::"
      echo ":::: MAKE nginx-${{vars.NGINX_VERSION }} ::::"
      echo "::::::::::::::::::::::::::::::::::::::::::::"
      make -j$(nproc)

      echo ":::::::::::::::::::::::::::::::::::::::::::::::::"
      echo ":::: MODULES nginx-${{vars.NGINX_VERSION }}  ::::"
      echo ":::::::::::::::::::::::::::::::::::::::::::::::::"
      make DESTDIR="${{targets.destdir}}" modules

      echo "::::::::::::::::::::::::::::::::::::::::::::::::"
      echo ":::: INSTALL nginx-${{vars.NGINX_VERSION }} ::::"
      echo "::::::::::::::::::::::::::::::::::::::::::::::"
      make DESTDIR="${{targets.destdir}}" install

      echo "::::::::::::::::::::::::::::::::::::::::::"
      echo ":::: SETCAP NGINX                     ::::"
      echo "::::::::::::::::::::::::::::::::::::::::::"

      setcap cap_net_bind_service=+ep ${{targets.destdir}}/usr/local/nginx/sbin/nginx \
        && setcap -v cap_net_bind_service=+ep ${{targets.destdir}}/usr/local/nginx/sbin/nginx

       echo "::::::::::::::::::::::::::::::::::::::::::"
       echo ":::: SETCAP DUMB INIT                  ::::"
       echo "::::::::::::::::::::::::::::::::::::::::::"

      setcap cap_net_bind_service=+ep ${{targets.destdir}}/usr/bin/dumb-init \
        && setcap -v cap_net_bind_service=+ep ${{targets.destdir}}/usr/bin/dumb-init


      echo "::::::::::::::::::::::::::::::::::::::::::::"
      echo ":::::::::::::::: CLEANUP :::::::::::::::::::"
      echo "::::::::::::::::::::::::::::::::::::::::::::"

      echo "Clean up owasp-modsecurity-crs"
      rm -rf ${{targets.destdir}}/etc/nginx/owasp-modsecurity-crs/.git
      rm -rf ${{targets.destdir}}/etc/nginx/owasp-modsecurity-crs/util/regression-tests


      echo "Clean up everything else"
      cd ${BUILD_PATH}

      rm -rf *.tar.gz ${BUILD_PATH}/ngx_devel_kit-"${{vars.NDK_VERSION}}" \
      ${BUILD_PATH}/set-misc-nginx-module-"${{vars.SETMISC_VERSION}}" \
      ${BUILD_PATH}/headers-more-nginx-module-"${{vars.MORE_HEADERS_VERSION}}" \
      ${BUILD_PATH}/ngx_http_substitutions_filter_module-"${{vars.NGINX_SUBSTITUTIONS}}"  \
      ${BUILD_PATH}/lua-nginx-module-"${{vars.LUA_NGX_VERSION}}"  \
      ${BUILD_PATH}/stream-lua-nginx-module-"${{vars.LUA_STREAM_NGX_VERSION}}"  \
      ${BUILD_PATH}/lua-upstream-nginx-module-"${{vars.LUA_UPSTREAM_VERSION}}"  \
      ${BUILD_PATH}/nginx_ajp_module-"${{vars.NGINX_AJP_VERSION}}"  \
      ${BUILD_PATH}/nginx-http-auth-digest-"${{vars.NGINX_DIGEST_AUTH}}"  \
      ${BUILD_PATH}/nginx-opentracing-"${{vars.NGINX_OPENTRACING_VERSION}}"/opentracing \
      ${BUILD_PATH}/ModSecurity-nginx-"${{vars.MODSECURITY_NGINX_VERSION}}"  \
      ${BUILD_PATH}/ngx_http_geoip2_module-"${{vars.GEOIP2_VERSION}}"  \
      ${BUILD_PATH}/ngx_brotli

      # Create symlinks to redirect nginx logs to stdout and stderr docker log collector
      ln -sf /dev/stdout /var/log/nginx/access.log \
      && ln -sf /dev/stderr /var/log/nginx/error.log

subpackages:
  - name: ingress-nginx-controller-compat
    description: Compatibility package for ingress-nginx-controller
    pipeline:
      - runs: |
          mkdir -p ${{targets.destdir}}/usr/local/bin
          ln -s /usr/local/nginx/sbin/nginx ${{targets.destdir}}/usr/local/bin/nginx

          mkdir -p ${{targets.destdir}}/usr/bin
          ln -s /usr/local/nginx/sbin/nginx ${{targets.destdir}}/usr/bin/nginx

update:
  enabled: true
  github:
    identifier: kubernetes/ingress-nginx
    strip-prefix: controller-v
    use-tag: true
    tag-filter: "controller-v"
